{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,SACnCC,YAAaF,SAASC,cAAc,kBACpCE,WAAYH,SAASC,cAAc,iBACnCG,aAAcJ,SAASC,cAAc,oBA+BvC,SAASI,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,CAACC,EAASC,KACpC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAtCbT,EAAKC,WAAWgB,iBAAiB,UAEjC,SAAwBC,GACtBA,EAAEC,iBAQJ,SAAwBC,EAAOC,EAAMC,GACnC,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAEhChB,EAAcgB,EADdH,GAAe,IAANG,EAAU,EAAIF,GAEpBG,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACjBX,EAAA2B,OAAOC,QAAQ,qBAAqBlB,QAAeC,MAAW,CAC5DkB,QAAS,KACT,IAEHC,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBX,EAAA2B,OAAOI,QAAQ,oBAAoBrB,QAAeC,MAAW,CAC3DkB,QAAS,KACT,G,CAnBRG,CACEC,OAAO/B,EAAKI,YAAY4B,OACxBD,OAAO/B,EAAKK,WAAW2B,OACvBD,OAAO/B,EAAKM,aAAa0B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst refs = {\n  formPromis: document.querySelector('.form'),\n  delayPromis: document.querySelector('[name=\"delay\"]'),\n  stepPromis: document.querySelector('[name=\"step\"]'),\n  amountPromis: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.formPromis.addEventListener('submit', onButtonSubmit);\n\nfunction onButtonSubmit(e) {\n  e.preventDefault();\n  createPromises(\n    Number(refs.delayPromis.value),\n    Number(refs.stepPromis.value),\n    Number(refs.amountPromis.value)\n  );\n}\n\nfunction createPromises(delay, step, amount) {\n  for (let i = 1; i <= amount; i += 1) {\n    delay += i === 1 ? 0 : step;\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 2000,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          timeout: 2000,\n        });\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n"],"names":["$eWCmQ","parcelRequire","$47d4ff9957288465$var$refs","formPromis","document","querySelector","delayPromis","stepPromis","amountPromis","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","delay1","step","amount","i","then","Notify","success","timeout","catch","failure","$47d4ff9957288465$var$createPromises","Number","value"],"version":3,"file":"03-promises.3efa45fb.js.map"}