{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,WAAYC,SAASC,cAAc,SACnCC,YAAaF,SAASC,cAAc,kBACpCE,WAAYH,SAASC,cAAc,iBACnCG,aAAcJ,SAASC,cAAc,oBA+BvC,SAASI,EAAcC,EAAUC,GAa/B,OAZgB,IAAIC,SAAQ,SAACC,EAASC,GACpC,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAtCPT,EAAKC,WAAWgB,iBAAiB,UAEjC,SAAwBC,GACtBA,EAAEC,iBAQJ,SAAwBV,EAAOW,EAAMC,GACnC,IAAK,IAAIC,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAEhCf,EAAce,EADdb,GAAe,IAANa,EAAU,EAAIF,GAEpBG,MAAK,SAAAC,G,IAAGhB,EAAQgB,EAARhB,SAAUiB,EAAKD,EAALf,MACjBX,EAAA4B,OAAOC,QAAQ,qBAAoCC,OAAfpB,EAAS,QAAYoB,OAANH,EAAM,MAAK,CAC5DI,QAAS,K,IAGZC,OAAM,SAAAN,G,IAAGhB,EAAQgB,EAARhB,SAAUiB,EAAKD,EAALf,MAClBX,EAAA4B,OAAOK,QAAQ,oBAAmCH,OAAfpB,EAAS,QAAYoB,OAANH,EAAM,MAAK,CAC3DI,QAAS,K,IAlBjBG,CACEC,OAAOjC,EAAKI,YAAY8B,OACxBD,OAAOjC,EAAKK,WAAW6B,OACvBD,OAAOjC,EAAKM,aAAa4B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix';\n\nconst refs = {\n  formPromis: document.querySelector('.form'),\n  delayPromis: document.querySelector('[name=\"delay\"]'),\n  stepPromis: document.querySelector('[name=\"step\"]'),\n  amountPromis: document.querySelector('[name=\"amount\"]'),\n};\n\nrefs.formPromis.addEventListener('submit', onButtonSubmit);\n\nfunction onButtonSubmit(e) {\n  e.preventDefault();\n  createPromises(\n    Number(refs.delayPromis.value),\n    Number(refs.stepPromis.value),\n    Number(refs.amountPromis.value)\n  );\n}\n\nfunction createPromises(delay, step, amount) {\n  for (let i = 1; i <= amount; i += 1) {\n    delay += i === 1 ? 0 : step;\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`Fulfilled promise ${position} in ${delay}ms`, {\n          timeout: 2000,\n        });\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`Rejected promise ${position} in ${delay}ms`, {\n          timeout: 2000,\n        });\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n\n  return promise;\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$refs","formPromis","document","querySelector","delayPromis","stepPromis","amountPromis","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","step","amount","i","then","param","_$delay","Notify","success","concat","timeout","catch","failure","$ce04d3a99e08e73b$var$createPromises","Number","value"],"version":3,"file":"03-promises.924b9632.js.map"}